@mixin animation($animation) {
  -webkit-animation: $animation;
  -moz-animation:    $animation;
  -o-animation:      $animation;
  animation:         $animation;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}

@mixin animation-delay($animation_delay) {
  -webkit-animation-delay: $animation_delay;
  -moz-animation-delay:    $animation_delay;
  -o-animation-delay:      $animation_delay;
  animation-delay:         $animation_delay;
}

@mixin animation-duration($animation_duration) {
  -webkit-animation-duration: $animation_duration;
  -moz-animation-duration:    $animation_duration;
  -o-animation-duration:      $animation_duration;
  animation-duration:         $animation_duration;
}

@mixin border-radius($radius: 5px) {
  -moz-border-radius:    $radius;
  -webkit-border-radius: $radius;
  border-radius:         $radius;
}

@mixin box-shadow($x: 1px, $y: 1px, $blur: 2px, $color: rgba(0,0,0,.4), $inset: "") {
  @if ($inset != "") {
    -webkit-box-shadow: $inset $x $y $blur $color;
    -moz-box-shadow:    $inset $x $y $blur $color;
    box-shadow:         $inset $x $y $blur $color;
  } @else {
    -webkit-box-shadow: $x $y $blur $color;
    -moz-box-shadow:    $x $y $blur $color;
    box-shadow:         $x $y $blur $color;
  }
}

@mixin box-sizing($type: border-box) {
    -webkit-box-sizing:   $type;
    -moz-box-sizing:      $type;
    box-sizing:           $type;
}

@mixin clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
    visibility: hidden;
    line-height: 0;
    height: 0;
    font-size: 0;
  }
}

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}

@mixin opacity($opacity: 0.5) {
  filter:         alpha(opacity=($opacity * 100));
  -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
  -moz-opacity:   $opacity;
  -khtml-opacity: $opacity;
  opacity:        $opacity;
}

@mixin transform($params) {
  -webkit-transform: $params;
  -moz-transform:    $params;
  transform:         $params;
}
@mixin transform-origin($params) {
  -webkit-transform-origin: $params;
  -moz-transform-origin:    $params;
  transform-origin:         $params;
}
@mixin transform-style($value) {
  -webkit-transform-style: $value;
  -moz-transform-style:    $value;
  transform-style:         $value;
}

@mixin transition($params) {
  -moz-transition:    $params;
  -o-transition:      $params;
  -webkit-transition: $params;
  -ms-transition:     $params;
  transition:         $params;
}
@mixin transition-delay($params){
  -moz-transition-delay:    $params;
  -o-transition-delay:      $params;
  -webkit-transition-delay: $params;
  -ms-transition-delay:     $params;
  transition-delay:         $params;
}
@mixin transition-duration($params){
  -moz-transition-duration:    $params;
  -o-transition-duration:      $params;
  -webkit-transition-duration: $params;
  -ms-transition-duration:     $params;
  transition-duration:         $params;
}
@mixin transition-list($values...){
  -moz-transition:    $values;
  -o-transition:      $values;
  -webkit-transition: $values;
  -ms-transition:     $values;
  transition:         $values;
}
@mixin transition-transform($values...) {
  -webkit-transition: -webkit-transform $values;
     -moz-transition: -moz-transform $values;
       -o-transition: -o-transform $values;
          transition: transform $values;
}
@mixin font-face($fontFamily, $path, $fontFilename) {
  font-family: $fontFamily;
  src: url('#{$path}#{$fontFilename}.eot');
  src: url('#{$path}#{$fontFilename}.eot?#iefix') format('embedded-opentype'),
       url('#{$path}#{$fontFilename}.svg##{$fontFilename}') format('svg'),
       url('#{$path}#{$fontFilename}.woff') format('woff'),
       url('#{$path}#{$fontFilename}.ttf') format('truetype');       
}
@mixin icon($content: "none") {
  @if ( $content != "none") {
    content: "#{$content}";
  }
  font-family: 'icomoon';
  display: inline-block;
  width: auto;
  height: auto;
  vertical-align: baseline;
  background-image: none;
  background-position: 0% 0%;
  background-repeat: repeat;
  margin-top: 0;
  speak: none;
  -webkit-font-smoothing: antialiased;
  text-transform: none;
  line-height: 1;
  font-weight: normal;
  font-variant: normal;
}
@mixin background-gradient-list($values...){
  background: -moz-linear-gradient(top, $values); /* FF3.6+ */
  background: -webkit-linear-gradient(top, $values); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top, $values); /* Opera 11.10+ */
  background: -ms-linear-gradient(top, $values); /* IE10+ */
  background: linear-gradient(to bottom, $values); /* W3C */
}
@mixin background-gradient-list-horizontal($values...) { 
 background: -moz-linear-gradient(left, $values); /* FF3.6+ */
  background: -webkit-linear-gradient(left, $values); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left, $values); /* Opera 11.10+ */
  background: -ms-linear-gradient(left, $values); /* IE10+ */
  background: linear-gradient(to right, $values); /* W3C */
}

